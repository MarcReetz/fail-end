{"version":3,"file":"main.c75d3949862cba1b52a3.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;;AAbA;AAgBA;AAAA;AAAA;AAAA;AAGA;AACA;;AACA;AACA;AAGA","sources":["webpack://fail-end/./src/hooks/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  password: null,\n  userName: null,\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n\n  reducers: {\n    setPassword: (state,action) => {\n      state.password = action.payload;\n    },\n    setUser: (state,action) => {\n      state.user = action.payload\n    }\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n});\n\nexport const { setPassword, setUser } = authSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectPassword = (state) => state.auth.password;\nexport const selectUser = (state) => state.auth.user;\n\n\nexport default authSlice.reducer;\n"],"names":[],"sourceRoot":""}