{"version":3,"file":"main.970ec526c29fa03fe7f5.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AAEA;AAAA;;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AAEA;AACA;AACA;AAHA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAxBA;AACA;;;AADA;AA0BA;AAAA;;AACA;AACA;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AAEA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;;AAxBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;;;AAEA;AAAA;;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAKA;AACA;AADA;AANA;AAWA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAbA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAuBA;;AAtCA;AACA;;;AADA","sources":["webpack://fail-end/./src/hooks/useAuth.js","webpack://fail-end/./src/hooks/useLocalStorage.js","webpack://fail-end/./src/pages/Login/Login.js"],"sourcesContent":["import { createContext, useContext, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useLocalStorage(\"user\", null);\n  const navigate = useNavigate();\n\n  const login = async (data) => {\n    setUser(data);\n    navigate(\"/dashboard/profile\", { replace: true });\n  };\n\n  const logout = () => {\n    setUser(null);\n    navigate(\"/\", { replace: true });\n  };\n\n  const value = useMemo(\n    () => ({\n      user,\n      login,\n      logout\n    }),\n    [user]\n  );\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n","import { useState } from \"react\";\n\nexport const useLocalStorage = (keyName, defaultValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const value = window.localStorage.getItem(keyName);\n\n      if (value) {\n        return JSON.parse(value);\n      } else {\n        window.localStorage.setItem(keyName, JSON.stringify(defaultValue));\n        return defaultValue;\n      }\n    } catch (err) {\n      return defaultValue;\n    }\n  });\n\n  const setValue = (newValue) => {\n    try {\n      window.localStorage.setItem(keyName, JSON.stringify(newValue));\n    } catch (err) {}\n    setStoredValue(newValue);\n  };\n\n  return [storedValue, setValue];\n};\n","import { Box } from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { Checkbox, Button, Group, TextInput } from \"@mantine/core\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\nexport default function Login() {\n  const { login } = useAuth();\n\n  const form = useForm({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n\n    validate: {\n      email: (value) => (/^\\S+@\\S+$/.test(value) ? null : \"Invalid email\"),\n    },\n  });\n\n  return (\n    <>\n      <Box>\n        <form onSubmit={form.onSubmit((values) => console.log(values))}>\n          <TextInput\n            withAsterisk\n            label=\"Email\"\n            placeholder=\"your@email.com\"\n            {...form.getInputProps(\"email\")}\n          />\n\n          <TextInput\n            label=\"Password\"\n            placeholder=\"***\"\n            {...form.getInputProps(\"password\")}\n          />\n          <Group position=\"apart\" mt=\"md\">\n            <Checkbox mt=\"md\" label=\"Keep me Loged in\" />\n            <Button type=\"submit\">Submit</Button>\n          </Group>\n        </form>\n      </Box>\n    </>\n  );\n}\n"],"names":[],"sourceRoot":""}