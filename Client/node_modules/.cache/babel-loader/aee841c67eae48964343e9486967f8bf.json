{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  password: null,\n  user: null\n};\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setPassword: (state, action) => {\n      state.password = action.payload;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n    }\n  } // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n\n});\nexport const {\n  setPassword,\n  setUser\n} = authSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\n\nexport const selectPassword = state => state.auth.password;\nexport const selectUser = state => state.auth.user;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","password","user","authSlice","name","reducers","setPassword","state","action","payload","setUser","actions","selectPassword","auth","selectUser","reducer"],"sources":["/Users/marc/Documents/Dev/MyProjects/fail-end/src/hooks/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  password: null,\n  user: null,\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n\n  reducers: {\n    setPassword: (state,action) => {\n      state.password = action.payload;\n    },\n    setUser: (state,action) => {\n      state.user = action.payload\n    }\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n});\n\nexport const { setPassword, setUser } = authSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectPassword = (state) => state.auth.password;\nexport const selectUser = (state) => state.auth.user;\n\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,IADS;EAEnBC,IAAI,EAAE;AAFa,CAArB;AAKA,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,MAD6B;EAEnCJ,YAFmC;EAInCK,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAkB;MAC7BD,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACC,OAAxB;IACD,CAHO;IAIRC,OAAO,EAAE,CAACH,KAAD,EAAOC,MAAP,KAAkB;MACzBD,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACC,OAApB;IACD;EANO,CAJyB,CAYnC;EACA;;AAbmC,CAAD,CAA7B;AAgBP,OAAO,MAAM;EAAEH,WAAF;EAAeI;AAAf,IAA2BP,SAAS,CAACQ,OAA3C,C,CAEP;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAIL,KAAD,IAAWA,KAAK,CAACM,IAAN,CAAWZ,QAA7C;AACP,OAAO,MAAMa,UAAU,GAAIP,KAAD,IAAWA,KAAK,CAACM,IAAN,CAAWX,IAAzC;AAGP,eAAeC,SAAS,CAACY,OAAzB"},"metadata":{},"sourceType":"module"}